from ...circuits.base_circuit import *


def bell_state_example():
    print("\n")
    print(f"Producing all four Bell States:")
    print("=" * linewid)
    print(f"Demonstration of Phi + Bell State Production:")
    phi_plus = Circuit(q=2)
    phi_plus.apply_gate(Hadamard, 0)
    phi_plus.apply_gate(CNot)
    phi_plus.print_state()
    phi_plus.list_probs()
    phi_plus.measure_state()
    print("=" * linewid)
    print("\n")
    print("=" * linewid)
    print(f"Demonstration of Phi - Bell State Production:")
    phi_minus = Circuit(q=2)
    phi_minus.apply_gate(Hadamard, 0)
    phi_minus.apply_gate(CNot)
    phi_minus.apply_gate(Z_Gate, 0)
    phi_minus.print_state()
    phi_minus.list_probs()
    phi_minus.measure_state()
    print("=" * linewid)
    print("\n")
    print("=" * linewid)
    print(f"Demonstration of Psi + Bell State Production:")
    psi_plus = Circuit(q=2)
    psi_plus.apply_gate(Hadamard, 0)
    psi_plus.apply_gate(CNot)
    psi_plus.apply_gate(X_Gate, 0)
    psi_plus.print_state()
    psi_plus.list_probs()
    psi_plus.measure_state()
    print("=" * linewid)
    print("\n")
    print("=" * linewid)
    print(f"Demonstration of Psi - Bell State Production:")
    psi_minus = Circuit(q=2)
    psi_minus.apply_gate(Hadamard, 0)
    psi_minus.apply_gate(CNot)
    psi_minus.apply_gate(X_Gate, 0)
    psi_minus.apply_gate(Z_Gate, 0)
    psi_minus.print_state()
    psi_minus.list_probs()
    psi_minus.measure_state()
    print("=" * linewid)


if __name__ == "__main__":
    bell_state_example()
    